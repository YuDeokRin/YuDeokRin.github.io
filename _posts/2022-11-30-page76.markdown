---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
# lng_pair: id_autogeneratedsamplecontent_1
title: Generic in Java

# post specific
# if not specified, .name will be used from _data/owner.yml
#author: "Dante"
# multiple category is not supported
category: auto generated
# multiple tag entries are possible`
tags: [Java]
# thumbnail image for post
img: ":java.jpg"
# disable comments on this page
comments_disable: true

# publish date
date: 2022-11-30 23:30:00 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-11-30 23:30:00 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---
{%- comment -%} Please delete below and place your page content here {%- endcomment -%}

{%- include util/auto-content-generator.liquid -%}

<!-- outline-start -->

# 실수를 방지하기 위한 제네릭이라는 것도 있어요.

# 제네릭(Generic)

- 제네릭(Generic)이란?
  - 제네릭(Generic)은 클래스 내부에서 사용할 데이터 타입을 외부에서 지정하는 기법을 의미한다


![Untitled](%E1%84%89%E1%85%B5%E1%86%AF%E1%84%89%E1%85%AE%E1%84%85%E1%85%B3%E1%86%AF%20%E1%84%87%E1%85%A1%E1%86%BC%E1%84%8C%E1%85%B5%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5%20%E1%84%8B%E1%85%B1%E1%84%92%E1%85%A1%E1%86%AB%20%E1%84%8C%E1%85%A6%E1%84%82%E1%85%A6%E1%84%85%E1%85%B5%E1%86%A8%E1%84%8B%E1%85%B5%E1%84%85%E1%85%A1%E1%84%82%E1%85%B3%E1%86%AB%20%E1%84%80%E1%85%A5%E1%86%BA%E1%84%83%E1%85%A9%20%E1%84%8B%E1%85%B5%E1%86%BB%E1%84%8B%205a082928595e473e912ebba5aea9b64d/Untitled.png)

1. `Class Person2`가 있다.  클래스의 필드 안에 info에 데이터 타입은 명시적으로 지정되어있지 않다.

   ![Untitled](%E1%84%89%E1%85%B5%E1%86%AF%E1%84%89%E1%85%AE%E1%84%85%E1%85%B3%E1%86%AF%20%E1%84%87%E1%85%A1%E1%86%BC%E1%84%8C%E1%85%B5%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5%20%E1%84%8B%E1%85%B1%E1%84%92%E1%85%A1%E1%86%AB%20%E1%84%8C%E1%85%A6%E1%84%82%E1%85%A6%E1%84%85%E1%85%B5%E1%86%A8%E1%84%8B%E1%85%B5%E1%84%85%E1%85%A1%E1%84%82%E1%85%B3%E1%86%AB%20%E1%84%80%E1%85%A5%E1%86%BA%E1%84%83%E1%85%A9%20%E1%84%8B%E1%85%B5%E1%86%BB%E1%84%8B%205a082928595e473e912ebba5aea9b64d/Untitled%201.png)

2. `Person2<String> p1 = new Person2<String>();` 이라는 코드가 될 때, 즉 인스턴스화(`new Person2<String>()`) 할 때  `< >` 안에 구체적으로 명시된 타입이 `class Person2<String>` 이 된다.
   따라서 Person2 클래스 안에 info는 String이라는 타입을 갖게 된다.

![Untitled](%E1%84%89%E1%85%B5%E1%86%AF%E1%84%89%E1%85%AE%E1%84%85%E1%85%B3%E1%86%AF%20%E1%84%87%E1%85%A1%E1%86%BC%E1%84%8C%E1%85%B5%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5%20%E1%84%8B%E1%85%B1%E1%84%92%E1%85%A1%E1%86%AB%20%E1%84%8C%E1%85%A6%E1%84%82%E1%85%A6%E1%84%85%E1%85%B5%E1%86%A8%E1%84%8B%E1%85%B5%E1%84%85%E1%85%A1%E1%84%82%E1%85%B3%E1%86%AB%20%E1%84%80%E1%85%A5%E1%86%BA%E1%84%83%E1%85%A9%20%E1%84%8B%E1%85%B5%E1%86%BB%E1%84%8B%205a082928595e473e912ebba5aea9b64d/Untitled%202.png)

1. GenericDemo2 클래스 안에 p1의 데이터 타입도 String 타입이 지정되어야 한다.



- 두번째 객체의 타입을 StringBuilder로  생성할때
  - 위의 예시와 같이 동작된다.

![Untitled](%E1%84%89%E1%85%B5%E1%86%AF%E1%84%89%E1%85%AE%E1%84%85%E1%85%B3%E1%86%AF%20%E1%84%87%E1%85%A1%E1%86%BC%E1%84%8C%E1%85%B5%E1%84%92%E1%85%A1%E1%84%80%E1%85%B5%20%E1%84%8B%E1%85%B1%E1%84%92%E1%85%A1%E1%86%AB%20%E1%84%8C%E1%85%A6%E1%84%82%E1%85%A6%E1%84%85%E1%85%B5%E1%86%A8%E1%84%8B%E1%85%B5%E1%84%85%E1%85%A1%E1%84%82%E1%85%B3%E1%86%AB%20%E1%84%80%E1%85%A5%E1%86%BA%E1%84%83%E1%85%A9%20%E1%84%8B%E1%85%B5%E1%86%BB%E1%84%8B%205a082928595e473e912ebba5aea9b64d/Untitled%203.png)

---

## 참고

- 자바의 신
- 생활 코딩 : ****Java - 제네릭(1~ 5)****

<!-- outline-end -->
