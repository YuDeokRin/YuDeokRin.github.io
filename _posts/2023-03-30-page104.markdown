---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
# lng_pair: id_autogeneratedsamplecontent_1
title: Session에 대해서

# post specific
# if not specified, .name will be used from _data/owner.yml
#author: "Dante"
# multiple category is not supported
category: auto generated
# multiple tag entries are possible
tags: [Http]
# thumbnail image for post
img: ":session.jpg"
# disable comments on this page
comments_disable: true

# publish date
date: 2023-03-30 22:17:00 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2023-03-30 22:17:00 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---
{%- comment -%} Please delete below and place your page content here {%- endcomment -%}

{%- include util/auto-content-generator.liquid -%}

<!-- outline-start -->

# 세션의 동작방식

## ✏️세션은 어떻게 동작할까?

### ✅웹 브라우저 : 로그인 시도

<img width="537" alt="Untitled" src="https://user-images.githubusercontent.com/56623911/228849241-8f96d92e-cc47-44c6-b622-4217c142b6cf.png">

### ✅세선 생성

<img width="842" alt="Untitled 1" src="https://user-images.githubusercontent.com/56623911/228849189-52115a0d-6d2f-4658-8fd3-6abca85356cc.png">

- 세션 ID를 생성하는데, 추정이 불가능해야 한다.

### ✅세션 ID를 응답 쿠키로 전달

- `MySessionId`라는 이름으로 세션ID만 쿠키에 담아서 전달한다.
- 클라이언트는 쿠키 저장소에 `mySessionId` 쿠키를 보관한다.

<img width="538" alt="Untitled 2" src="https://user-images.githubusercontent.com/56623911/228849211-d7a6709d-be9b-4b03-81db-c4357b0446ab.png">

### 🚨중요

- 회원과 관련된 정보는 전혀 클라이언트에 전달하지 않는다는 것이다.
- 오직 추정 불가능한 세션 ID만 쿠키를 통해 클라이언트에 전달한다.

### ✅클라이언트의 세션Id 쿠키 전달

<img width="839" alt="Untitled 3" src="https://user-images.githubusercontent.com/56623911/228849219-6e792d29-0177-44b3-a331-858287337e8c.png">

- 클라이언트는 요청시 항상 `mySessionId` 쿠키를 전달한다.
- 서버에서는 클라이언트가 전달한 `mySessionId`쿠키 정보로 세션 저장소를 조회해서 로그인시 보관한다.

---

## ➡️정리

세션을 사용해서 서버에서 중요한 정보를 관리하게 되었다. 따라서 보안 문제들을 해결

- 쿠키 값을 변조 가능 → 예상 불가능한 복잡한 세션ID를 사용한다.
- 쿠키에 보관하는 정보는 클라이언트 해킹시 유출 가능성이 있다. → 세션ID가 노출되어도 여기에는 중요한 정보가 없다.
- 쿠키 탈취 후 사용 → 해커가 토큰을 털어가도 시간이 지나면 사용할 수 없도록 서버에서 세션의 만료시간을 짧게 유지한다.

---

## 📎출처

- ****[스프링 MVC 2편 - 백엔드 웹 개발 활용 기술](https://www.inflearn.com/course/스프링-mvc-2/dashboard)****


<!-- outline-end -->
