---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
# lng_pair: id_autogeneratedsamplecontent_1
title: 테스트 주도 개발 7주차

# post specific
# if not specified, .name will be used from _data/owner.yml
#author: "Dante"
# multiple category is not supported
category: auto generated
# multiple tag entries are possible`
tags: [TDD]
# thumbnail image for post
img: ":testDrivenDevelopment.jpg"
# disable comments on this page
comments_disable: true

# publish date
date: 2022-11-25 23:45:00 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-11-25 23:45:00 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---
{%- comment -%} Please delete below and place your page content here {%- endcomment -%}

{%- include util/auto-content-generator.liquid -%}

<!-- outline-start -->

# 스터디 7주차(22.11.17 ~ 22.11.26)

## 26장. 빨간 막대 패턴

이번26장은 테스트를 언제 어디서 작성할 것인지, 테스트 작성을 언제 멈출지에 대한 것

### ➡️한 단계 테스트

- 목록에서 테스트를 고를 때 무엇을 기준으로 선택해야할까?
  - 구현할 수 있다는 확신이 드는 테스트를 고를 것.


- 예를 들어 아래와 같은 목록이 있다면 어떤 테스트를 우선순위로 할 것인가?

```
- 더하기

- 빼기

- 곱하기

- 나누기

- 비슷한 것 더하기

- 동치성(equals)

- Null과의 동치성(equals null)

- 널 환전

- 한 개의 통화를 환전하기

- 두 개의 통화를 환전하기

- 환시세
```

- 전체 계산 중 간단한 하나의 사례를 나타내는 테스트에서 시작했다면, 이 테스트를 통해 자라는 프로그램은 `하향식(top-down)`으로 작성된 것으로 보일 수 있다.

- 전체의 작은 한 조각을 나타내는 테스트에서 시작하여 조금씩 붙여나가는 식이었다면, 이 프로그램은 `상향식(bottom-up)`으로 작성된 것으로 보일 수 있다.

상향식, 하향식 방법은 TDD의 프로세스를 효과적으로 설명해 줄 수 없다.

1. 수직적 메타포는 프로그램이 시간에 따라 어떻게 변해 가는지에 대한 단순화된 시각일 뿐…
2. 메타포가 어떤 방향성을 가질 필요가 있다면(상향 혹은 하향보다는) `‘아는 것에서 모르는 것으로(known-to-unknown)’`라는 방향이 유용하다.

---

### ➡️시작 테스트

어떤 테스트부터 시작하는 게 좋을까?

- 첫 걸음으로 현실적인 테스트를 하나 작성한다면 많은 문제를 한번에 해결해야 하는 상황이 될 것이기 때문에 유의해야한다.
1. 이 오퍼레이션을 어디에 두어야 하나?
2. 적절한 입력 값은 무엇인가?
3. 이 입력들이 주어졌을 때 적절한 출력은 무엇인가?

- 상황 예시
  - XP 튜스 그룹에서 누군가가 다각형 축소기(polygon reducer)를 테스트 우선으로 어떻게 작설할지 질문을 했다고 가정해보자.  입력은 다각형 그물이고, 출력은 정확하게 똑같은 표면이면서 가능한 한 최소 개수의 다각형으로 구성된 다각형 그물이 된다.

- 위의 상황 가정에서 “테스트를 작동하도록 하는 데 박사 학위 논문을 읽어야 하는 경우, 이 문제를 어떻게 테스트 주도로 접근할 수 있을까?”

시작 테스트 패턴에 이 문제에 대한 답을 준다.

- 출력이 입력과 같은 경우가 있다. 어떤 형상(configuration)의 다각형들은 이미 정규화되어 있고 더 축소할 수 없다.
- 입력은 가능한 한 적어야 한다. 이를테면 다각형 하나 또는 아예 비어있는 다각형 목록일 수도 있다.


```java
Reducer r = new Reducer(new Polygon());
assertEquals(0, reducer.result().npoints);
```

<!-- outline-end -->
