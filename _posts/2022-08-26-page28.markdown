---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
# lng_pair: id_autogeneratedsamplecontent_1
title: 인텔리J에서 JUnit 설정

# post specific
# if not specified, .name will be used from _data/owner.yml
#author: "Dante"
# multiple category is not supported
category: auto generated
# multiple tag entries are possible`
tags: [TDD, JUnit5]
# thumbnail image for post
img: ":TDD.jpg"
# disable comments on this page
comments_disable: true

# publish date
date: 2022-08-26 23:55:00 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-08-26 23:55:00 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---
{%- comment -%} Please delete below and place your page content here {%- endcomment -%}

{%- include util/auto-content-generator.liquid -%}

<!-- outline-start -->
# 인텔리J에서 JUnit 설정

## 인텔리제이 깡통에서 JUnit 설정을 해보자.

### 1.우선 인텔리제이를 들어가 Create New Project 실행한다.

- Language : Java로 하겠다.
- Build System :  intelliJ 로 해야지 깡통으로 시작이다.
- 주의 : JDK는 8이상 해야한다. (JUnit5은 8이상부터 가능하다)

![Untitled](https://user-images.githubusercontent.com/56623911/186915685-50772d22-975b-4551-a0c8-29cb34e8d0cf.png)

이제 JUnit5 를 라이브러리에 추가해보자 .

### 2. File - > Project Structure 들어가자

![Untitled 1](https://user-images.githubusercontent.com/56623911/186915635-8091b7aa-feab-42e9-85a1-ffe196bc1db7.png)

### 3. 왼쪽 Project Settings에서 Modules에서 Dependencies를 들어간다.

![Untitled 2](https://user-images.githubusercontent.com/56623911/186915660-22662b05-ed24-4801-a580-519fc44a1c9a.png)

### 4. [+] 버튼을 누르고 [Libray] → [From Maven] 클릭한다.

![Untitled 3](https://user-images.githubusercontent.com/56623911/186915665-858c395b-50de-4bc7-a1b1-7cdbb576c842.png)

### 5. 검색창에 ‘org.junit.jupiter:junit-jupiter-api:jar:5.5.0’ 입력 → [OK]

- 다른 버젼을 사용하고 싶다면 아래의 사이트에서 JUnit 을 검색 후 builer에서 복사해오면 된다.

[](https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api/5.5.0)

![Untitled 4](https://user-images.githubusercontent.com/56623911/186915668-b66d3c39-ab65-45ef-a5f6-54269fda01b8.png)

![Untitled 5](https://user-images.githubusercontent.com/56623911/186915673-350d4f5a-9211-438a-a786-ba6397ab4012.png)

### 6. Configure Library 에서  → [OK] 클릭 > JUnit 5 라이브러리를 프로젝트에 추가한다.

![Untitled 6](https://user-images.githubusercontent.com/56623911/186915677-e853b5a7-cd1a-41ba-8ee0-4d30745d84c8.png)

### 7.  패키지를 만들고  java 파일을 만들어준다. → 잘되는지 테스트 해본다.

```java
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class StringTest {

    @Test
    void substring(){
        String str = "안녕하세요";
        assertEquals("하세", str.substring(2, 4));
    }
}
```

![Untitled 7](https://user-images.githubusercontent.com/56623911/186915681-33b87e31-a802-4957-bbf1-0c72d1da96e5.png)

성공 환경 설정 완료

IntelliJ,Maven, Gradle 세 가지로 설정이 가능하다. 위에서 설명은 IntelliJ로 라이브러리를 다운로드로해서 설정했다.



<!-- outline-end -->
