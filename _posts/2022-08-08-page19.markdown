---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
# lng_pair: id_autogeneratedsamplecontent_1
title: homebrew로 Mariadb 설치

# post specific
# if not specified, .name will be used from _data/owner.yml
#author: "Dante"
# multiple category is not supported
category: auto generated
# multiple tag entries are possible`
tags: [Database, DB]
# thumbnail image for post
img: ":mariadb.png"
# disable comments on this page
comments_disable: true

# publish date
date: 2022-08-08 23:55:00 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-08-08 23:55:00 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---
{%- comment -%} Please delete below and place your page content here {%- endcomment -%}

{%- include util/auto-content-generator.liquid -%}

<!-- outline-start -->
# [Chapter 1] 환경설정

## 1. git 설치

→ 글쓴이는  mac환경에서 brew를 이용하여 손쉽게 다운 받았다.

home brew 명령어

`git install : brew install git`

`installed git version check : brew info git`

## 2. JDK 설치, 개발 통합환경(IDE) 설치

글쓴이는 java 11을 쓰고 있다.

## 3. 웹 개발 설정 및 플러그인 설치

- JavaEE 플러그인 설치 →JSP 웹 개발 환경
- Javascript 파일 인식 설정
- Lombok 설치
- 폰트 및 인코딩 설정 : Hack Nerd Font Mono , UTF - 8(CSS, HTML, JSP)

## 4. MariaDB(또는 Mysql) 설치 및 테스트

MariaDB설치 : `brew install mariadb`

- 경로 /opt/homebrew/Cellar/mariadb/

mysql 설치 :  `brew install mysql`

- /opt/homebrew/Cellar/mysql/

기존에 mysqld이 있었다. 그런데 mariadb 다운 받으려고 home brew를 했는데….  💥 충돌

※주의 :  mysql이 있는 상태에서 Mariadb 를 brew 로 install할 경우 install에 있어서 충돌이 일어난다.

```bash
> brew install mysqld

Conflicts with:
mariadb (because mysql, mariadb, and percona install the same binaries)
percona-server (because mysql, mariadb, and percona install the same binaries)
/opt/homebrew/Cellar/mysql/8.0.29 (311 files, 295MB) *
Poured from bottle on 2022-07-09 at 01:30:48
```

**원인**

1. 둘다 port 3306 을 사용 중이다. 둘 중 하나 port번호를 바꾼다. → 포트 충돌 💥

   mariadb → port :3306

   mysql → port : 3307


포트번호 바꿨다.

homebrew로 설치해서 my.cnf 파일을 찾기가 너무 힘들었다.

나의 m1맥북에는 etc/opt/homebrew/etc 에 있었다.

`my.cnf` 으로 port = 3307로 설정했다.

![Untitled](https://user-images.githubusercontent.com/56623911/183444414-644e9688-0f3b-420e-a7d3-f1d189da62a7.png)

![Untitled 1](https://user-images.githubusercontent.com/56623911/183444415-1a403d8d-95b9-4596-9b36-5c32e17ec4c8.png)

하지만

Error: Cannot install mariadb because conflicting formulae are installed. mysql: because mariadb, mysql, and percona install the same binaries

Please `brew unlink mysql` before continuing.

Unlinking removes a formula's symlinks from /opt/homebrew. You can link the formula again after the install finishes. You can --force this install, but the build may fail or cause obscure side effects in the resulting software.

이런 에러가 뜨면서 설치가 안됐다.

저기서 알려준 방법으로 `brew unlink mysql` 이라고 하고 다시 `brew install mariadb` 라고 하니깐 된다. !!!🎉🎉 성공 … 감동 😭 

설치 끝.. 링크

설치 후

연결 하기 전 `brew services list` 로 서비스 중인 db를 확인한다.

![Untitled 2](https://user-images.githubusercontent.com/56623911/183444423-5d464c17-59cd-468b-a5bd-ac7bcce09120.png)

mariadb를 활성화 시켜준다.

![Untitled 3](https://user-images.githubusercontent.com/56623911/183444432-c27cfcee-2705-4640-bc75-e86f81a059c0.png)

![Untitled 4](https://user-images.githubusercontent.com/56623911/183444437-0bf06521-9355-4133-ab52-257d926922a8.png)

1. 도커 또는 가상머신을 이용해서 사용한다? 이건 무리데쓰네.. 😫

| DB | Version |
| --- | --- |
| mysql | mysql Ver 8.0.29 for macos12.2 on arm64 (Homebrew) |
| mariadb | 다운받는다는 가정하에 버젼 10.5 |

## 5. postman 설치, Json viewer

`brew install postman`

## 6. yml 파일 이해하기

springframework를 만들 때 **어떻게** 만들지 정의한다.

음료 공장을 만드는 기술자

(1) 두번째 공장

**→ contextPath : /**

```yaml
server:
	port:8080
	servlet:
		context-path: /
```

(2) 공장 입구는 서쪽

**→ port : 8080**

```yaml
server:
	port:8080
```

(3) 음료 요청은 전부 한글 문서로 변경해서 받는다.

**→  encoding  :  UTF-8**

```yaml
encoding:
	charset:uft-8
	enabled:true
```

(4) 음료는 전부 콜라로 만들어서 출시된다.

**→ 응답을 .jsp 파일로 한다는 설정 (View Resolver)**

```yaml
spring:
	mvc:
		view:
			prefix: /WEB-INF/views/
			suffix: .jsp
```

다른 예시) Json 파일,  XML파일, HTML

(5) 음료 창고는 컨테이너 박스를 사용한다.  → mysql

(6) 음료는 요청에 따라 패트병, 캔, 병으로 출시된다.

**→ JPA(ORM) :응답이 고정이아닌  원하는데(페트,캔, 병)로 해줄 수 있다.**

```yaml
jpa:
```

(7) 공장이 재가동 될 때 기존에 만들어졌던 음료는 버리지 않는다.

```yaml
jpa:
	open-in-view: true
	hiernate:
		ddl-auto: update
```

**update** : server가 재가동 될 때 마다 데이터베이스에 데이터, 스키마,테이블 등 그대로 유지된다.

**create** : server가 재가동 될 때 마다 기존의 데이터들 없어진다.

(8) 음료 요청시 A4용지 2장 이상의 문서는 받지 않는다.

**→ max-file-size:2MB**

```yaml
servelt:
	multipart:
		enabled:true
		max-file-size:2MB
```

(9) 음료 요청은 아무나 할 수 없다. 암호를 아는 사람만 요청한다.

**→ security : name과 password를 아는 사람만 요청이 가능하다.**

```yaml
security:
	user:
		name:test
		password:1234

```
<!-- outline-end -->
