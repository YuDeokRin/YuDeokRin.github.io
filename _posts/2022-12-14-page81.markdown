---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
# lng_pair: id_autogeneratedsamplecontent_1
title: Collection - Map 정리

# post specific
# if not specified, .name will be used from _data/owner.yml
#author: "Dante"
# multiple category is not supported
category: auto generated
# multiple tag entries are possible`
tags: [Java]
# thumbnail image for post
img: ":java.jpg"
# disable comments on this page
comments_disable: true

# publish date
date: 2022-12-14 23:30:00 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2022-12-14 23:30:00 +0900
# check the meta_common_description in _data/lang/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---
{%- comment -%} Please delete below and place your page content here {%- endcomment -%}

{%- include util/auto-content-generator.liquid -%}

<!-- outline-start -->

# 자바랭 다음으로 많이 쓰는 애들은 컬렉션 - Part3(Map)

# Map

![Untitled](%E1%84%8C%E1%85%A1%E1%84%87%E1%85%A1%E1%84%85%E1%85%A2%E1%86%BC%20%E1%84%83%E1%85%A1%E1%84%8B%E1%85%B3%E1%86%B7%E1%84%8B%E1%85%B3%E1%84%85%E1%85%A9%20%E1%84%86%E1%85%A1%E1%86%AD%E1%84%8B%E1%85%B5%20%E1%84%8A%E1%85%B3%E1%84%82%E1%85%B3%E1%86%AB%20%E1%84%8B%E1%85%A2%E1%84%83%E1%85%B3%E1%86%AF%E1%84%8B%E1%85%B3%E1%86%AB%20%E1%84%8F%E1%85%A5%E1%86%AF%E1%84%85%E1%85%A6%E1%86%A8%E1%84%89%E1%85%A7%E1%86%AB%20-%206f41973bbdeb47b6ba26fc2ad94bd43c/Untitled.png)

## Map이란 ?

Map 인터페이스를 구현한 Map 컬렉션 클래스들은 키와 값을 하나의 쌍으로 저장하는 방식(key-value 방식)을 사용한다.

1. 모든 데이터는 키(key)와 값(value)이 존재한다.
2. 키가 없이 값만 저장될 수는 없다.
3. 값 없이 키만 저장할 수도 없다.
4. 키는 해당 Map에서 고유해야만 한다.
5. 값은 Map에서 중복되어도 상관 없다.
6. 요소의 저장 순서를 유지하지 않는다.

Map은 java.util 패키지의 Map이라는 이름의 인터페이스로 선언되어 있고, 구현해 놓은 클래스들도 많이 있다.

- Map인터페이스에 선언되어 있는 메소드들의 주요 기능

| 리턴 타입 | 메소드 이름 및 매개 변수 | 설명 |
| --- | --- | --- |
| V | put(K key, V value) | 첫 번째 변수인 키를 갖는, 두 번째 매개 변수인 값을 갖는 데이터를 저장한다. |
| void | putAll(Map<? extends K, ? extends V> m) | 매개 변수로 넘어온 Map의 모든 데이터를 저장한다. |
| V | get(Object key) | 매개 변수로 넘어온 키에 해당하는 값을 넘겨 준다. |
| V | remove(Object key) | 매개 변수로 넘어온 키에 해당하는 값을 넘겨주며, 해당 키와 값은 Map에서 삭제한다. |
| Set<K> | keySet() | 키의 목록을 Set 타입으로 리턴한다. |
| Collection<V> | values() | 값의 목록을 Collection 타입으로 리턴한다. |
| Set<Map.Entry<K,V>> | entrySet() | Map 안에 Entry라는 타입의 Set을 리턴한다. |
| int | size() | Map의 크기를 리턴한다. |
| void | clear() | Map의 내용을 지운다. |

---

## Map을 구현한 주요 클래스들

Hashtable 클래스는 Map 인터페이스를 구현하기는 했지만 일반적인 Map 인터페이스를 구현한 클래스들과 다르다.

- Hashtable과 Map인터페이스 구현 클래스의 다른 점
  - Map은 컬렉션 뷰(Collection View)를 사용하지만, Hashtable은 Enumeration 객체를 통해서 데이터를 처리한다.
  - Map은 키, 값, 키-값 쌍으로 데이터를 순회하여 처리할 수 있지만, Hashtable은 이 중에서 키-값 쌍으로 데이터를 순환하여 처리할 수 없다.
  - Map은 이터레이션을 처리하는 도중에 데이터를 삭제하는 안전한 방법을 제공하지만, Hashtable은 그러한 기능을 제공하지 않는다.


| 기능 | HashMap | Hashtable |
| --- | --- | --- |
| 키나 값에 null 저장 가능 여부 | 가능 | 불가능 |
| 여러 쓰레드 안전 여부 | 불가능 | 가능 |

---

## HashMap 클래스에 관하여

### 우선 HashMap의 상속관계

```java
java.lang.Object
    java.util.AbstractMap<K,V>
        java.util.HashMap<K,V>
```

### 어떤 인터페이스를 구현했는지 ?

| 인터페이스 | 용도 |
| --- | --- |
| Serializable | 원격으로 객체를 전송하거나, 파일에 저장할 수 있음을 지정 |
| Cloneable | Object 클래스의 clone() 메소드가 제대로 수행될 수 있음을 지정, 즉 복제가 가능한 객체임을 의미한다. |
| Map<E> | 맵의 기본 메소드 지정 |

### HashMap 생성자의 구성

| 생성자 | 설명 |
| --- | --- |
| HashMap() | 16개의 저장 공간을 갖는 HashMap 객체를 생성한다. |
| HashMap(int initialCapacity) | 매개 변수만큼의 저장 공간을 갖는 HashMap 객체를 생성한다. |
| HashMap(int initialCapacity, float loadFactor) | 첫 매개 변수의 저장 공간을 갖고, 두 번째 매개 변수의 로드 팩터를 갖는 HashMap 객체를 생성한다. |
| HashMap(<Map<? extends K, ? extends V> m) | 매개 변수로 넘어온 Map을 구현한 객체에 있는 데이터를 갖는 HashMap 객체를 생성한다. |

HashMap 객체를 생성할 때에는 매개 변수가 없는 생성자를 사용한다.



<!-- outline-end -->
